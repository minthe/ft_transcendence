openapi: 3.0.2
info:
  title: game-chat REST API
  version: '1.1.3'
  description: |
    REST API Documentation for ft_transcendence.
    Under heavy development. Expect breaking changes.

servers:
  - url: https://localhost
  - url: https://playpong.duckdns.org

tags:
  - name: Status
  - name: User

paths:
  /game/status:
    get:
      tags:
        - Status
      summary: Check Heartbeat Status
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Service is up and running
          content:
            application/json:
              example: {"message": "Service is up and running"}
        '401':
          description: Missing or invalid JWT token
          content:
            application/json:
              example: {"message": "Missing or invalid JWT token"}
        '503':
          description: Service is down or unhealthy
          content:
            application/json:
              example: {"message": "Service is down or unhealthy"}
  /game/user:
    post:
      tags:
        - User
      summary: add new User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserRequest'
      responses:
        '200':
          description: OK
        '409':
          description: User already exists
          content:
            application/json:
              example: {"message": "User already exists"}
        '401':
          description: Missing or invalid JWT token
          content:
            application/json:
              example: {"message": "Missing or invalid JWT token"}
        '500':
          description: Internal server error
          content:
            application/json:
              example: {"message": "Internal server error"}
  /game/user/avatar:
    put:
      tags:
        - Avatar
      summary: Update Avatar
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvatarRequest'
      responses:
        '200':
          description: OK
        '401':
          description: Missing or invalid JWT token
          content:
            application/json:
              example: {"message": "Missing or invalid JWT token"}
        '500':
          description: Internal server error
          content:
            application/json:
              example: {"message": "Internal server error"}
  /game/user/alias:
    put:
      tags:
        - Alias
      summary: Update Alias
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AliasRequest'
      responses:
        '200':
          description: OK
        '409':
          description: Alias already exists
          content:
            application/json:
              example: {"message": "Alias already exists"}
        '401':
          description: Missing or invalid JWT token
          content:
            application/json:
              example: {"message": "Missing or invalid JWT token"}
        '500':
          description: Internal server error
          content:
            application/json:
              example: {"message": "Internal server error"}

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    NewUserRequest:
      type: object
      required:
        - username
        - avatar
      properties:
        username:
          type: string
          example: "MoonDog"
        avatar:
          type: string
          example: "moonDog_abcdef1234567890.jpg"
    AvatarRequest:
      type: object
      required:
        - avatar
      properties:
        avatar:
          type: string
          example: "moonDog_abcdef1234567890.jpg"
    AliasRequest:
      type: object
      required:
        - alias
      properties:
        alias:
          type: string
          example: "MoonDog"

